Dr Arnett Campbell: Based on the exercise we just did, what is the Big O efficiency of Dijkstra’s algorithm if we use a min-priority queue data structure to implement it?
Dr Arnett Campbell:QUESTION 1
Basil Ford: Sir its O ( V + E log V )
Jeneal Dawkins: O(V + E log V)
Pam Rollings: O(v^2)
Marcus Mullings: I think its O(V + E log V)
Nickolas Plummer: quadratic
Nioka Black: O(V+ELogV)
Mary Bonner: Θ(V+ELogV)
Larry Brown: O(V + E log V)
George Clue: I would say O(n), linear
Dr Arnett Campbell:End
Dr Arnett Campbell: What is the time complexity of a linear search algorithm?
Basil Ford: O(n)
Jeneal Dawkins: O(log(n))
Pam Rollings: O(1)
Marcus Mullings: O(n)
Nickolas Plummer: O(n)
Nioka Black: O(n)
Mary Bonner: O(n)
Larry Brown: O(n^2)
George Clue: I don't know.
Dr Arnett Campbell: What does it mean when we say that an algorithm X is asymptotically more efficient than Y?
Basil Ford: means that as the input size grows, X's performance is significantly better than Y in terms of time or space
Jeneal Dawkins: It means that for large input sizes, algorithm X has a better time or space complexity compared to algorithm Y
Pam Rollings: X outperforms algorithm Y when the input size becomes very large
Marcus Mullings: I just came to class, not sure what's going on tbh.
Nickolas Plummer: I'm just leaving a random message to get my participation grade.
Nioka Black: Same. I'm just leaving a random message to get my participation grade.
Mary Bonner: I don't know.
Larry Brown: I don't understand the question.
George Clue: It means that algorithm X is always faster than Y, regardless of the input size.